{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextParagraph, TextH1, TextH2, TextLabel, TextH3 } from \"../components/StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogoColour = _React$useState2[0],\n    setIsLogoColour = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    username = _React$useState4[0],\n    setUsername = _React$useState4[1];\n  var _React$useState5 = React.useState(\"\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    password = _React$useState6[0],\n    setPassword = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    error = _React$useState8[0],\n    setError = _React$useState8[1];\n  function toggleLogo() {\n    setIsLogoColour(!isLogoColour);\n  }\n  function showHelp() {\n    props.navigation.replace('Root', {\n      screen: 'Help'\n    });\n  }\n  function login() {\n    props.navigation.replace('Root', {\n      screen: 'Menu'\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsx(View, {\n        style: Styles.homeLogoContainer,\n        children: _jsx(Pressable, {\n          onPress: toggleLogo,\n          children: _jsx(Image, {\n            source: isLogoColour ? require(\"../assets/images/roi-logo.jpg\") : require(\"../assets/images/roi-logo-monochrome.jpg\"),\n            style: Styles.homeLogo\n          })\n        })\n      }), _jsx(View, {\n        style: Styles.homeHeadingContainer,\n        children: _jsx(Text, {\n          style: Styles.homeHeading,\n          children: \" Login to Bean Scene Restaurant \"\n        })\n      }), _jsxs(View, {\n        style: Styles.fieldSet,\n        children: [_jsxs(View, {\n          style: Styles.formRow,\n          children: [_jsx(TextLabel, {\n            children: \"Username:\"\n          }), _jsx(TextInput, {\n            value: username,\n            onChangeText: setUsername,\n            style: Styles.textInput\n          })]\n        }), _jsxs(View, {\n          style: Styles.formRow,\n          children: [_jsx(TextLabel, {\n            children: \"Password:\"\n          }), _jsx(TextInput, {\n            value: password,\n            onChangeText: setPassword,\n            style: Styles.textInput\n          })]\n        }), _jsx(View, {\n          style: Styles.homeButtonContainer,\n          children: _jsx(MyButton, {\n            text: \"Login\",\n            type: \"major\",\n            size: \"large\",\n            onPress: login,\n            buttonStyle: Styles.loginButton\n          })\n        }), error && _jsx(TextH3, {\n          style: {\n            color: 'red'\n          },\n          children: \"Username or password is wrong\"\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Image","Text","View","ScrollView","Pressable","TextInput","SafeAreaView","Settings","Styles","MyButton","TextParagraph","TextH1","TextH2","TextLabel","TextH3","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColour","setIsLogoColour","_React$useState3","_React$useState4","username","setUsername","_React$useState5","_React$useState6","password","setPassword","_React$useState7","_React$useState8","error","setError","toggleLogo","showHelp","navigation","replace","screen","login","style","safeAreaView","children","container","contentContainerStyle","contentContainer","homeLogoContainer","onPress","source","require","homeLogo","homeHeadingContainer","homeHeading","fieldSet","formRow","value","onChangeText","textInput","homeButtonContainer","text","type","size","buttonStyle","loginButton","color"],"sources":["C:/Diploma Project Indivisual/BeanSceneProject/BeanSceneMobileApp/MobileAppUI/screens/HomeScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Image, Text, View, ScrollView, Pressable, TextInput } from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n// Import styling and components\r\nimport Styles from \"../styles/MainStyle\";\r\nimport { MyButton } from '../components/MyButton';\r\nimport { TextParagraph, TextH1, TextH2, TextLabel, TextH3  } from \"../components/StyledText\";\r\n\r\nexport default function HomeScreen(props) {\r\n  //State management\r\n  const [isLogoColour, setIsLogoColour] = React.useState(true);\r\n\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  \r\n  const [error, setError] = React.useState(false);\r\n\r\n  function toggleLogo() {\r\n    setIsLogoColour(!isLogoColour)\r\n  }\r\n\r\n  function showHelp() {\r\n    props.navigation.replace('Root', { screen: 'Help' });\r\n  }\r\n\r\n\r\n\r\n  function login() {\r\n    \r\n\r\n    \r\n    props.navigation.replace('Root', { screen: 'Menu' });\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={Styles.safeAreaView}>\r\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n        {/* Logo */}\r\n        <View style={Styles.homeLogoContainer}>\r\n          <Pressable onPress={toggleLogo}>\r\n            <Image\r\n              //condotion\r\n              source={\r\n                isLogoColour\r\n                  ? require(\"../assets/images/roi-logo.jpg\")\r\n                  : require(\"../assets/images/roi-logo-monochrome.jpg\")\r\n\r\n              }\r\n              style={Styles.homeLogo}\r\n            />\r\n          </Pressable>\r\n        </View>\r\n\r\n\r\n        {/* Heading */}\r\n        <View style={Styles.homeHeadingContainer}>\r\n          <Text style={Styles.homeHeading}> Login to Bean Scene Restaurant </Text>\r\n        </View>\r\n\r\n        {/* <TextH1>This is the home screen</TextH1>\r\n\r\n        <TextParagraph>Here is some sample text for the home screen.</TextParagraph>\r\n\r\n        <TextParagraph>There is no place like 127.0.0.1</TextParagraph> */}\r\n        {/* Buttons */}\r\n        <View style={Styles.fieldSet}>\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Username:</TextLabel>\r\n            <TextInput value={username} onChangeText={setUsername} style={Styles.textInput} />\r\n          </View>\r\n\r\n          <View style={Styles.formRow}>\r\n            <TextLabel>Password:</TextLabel>\r\n            <TextInput value={password} onChangeText={setPassword} style={Styles.textInput} />\r\n          </View>\r\n\r\n          <View style={Styles.homeButtonContainer}>\r\n            <MyButton\r\n              text=\"Login\"\r\n              type=\"major\"      // default*|major|minor\r\n              size=\"large\"      // small|medium*|large\r\n              onPress={login}\r\n              buttonStyle={Styles.loginButton}\r\n            />\r\n\r\n\r\n            {/* <MyButton\r\n            text=\"Help\"\r\n            type=\"defualt\"      // default*|major|minor\r\n            size=\"large\"      // small|medium*|large\r\n            onPress={showHelp}\r\n            buttonStyle={Styles.homeButton}\r\n          /> */}\r\n\r\n\r\n          </View>\r\n\r\n          {error && <TextH3 style={{color:'red'}}>Username or password is wrong</TextH3>}\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}