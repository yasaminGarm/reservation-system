{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport RootNavigator from \"./navigation/RootNavigator\";\nimport LinkingConfiguration from \"./navigation/LinkingConfiguration\";\nimport FlashMessage from 'react-native-flash-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(NavigationContainer, {\n      linking: LinkingConfiguration,\n      children: _jsx(RootNavigator, {})\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlashMessage, {\n      position: \"top\"\n    })]\n  });\n}","map":{"version":3,"names":["NavigationContainer","StatusBar","SafeAreaProvider","RootNavigator","LinkingConfiguration","FlashMessage","jsx","_jsx","jsxs","_jsxs","App","children","linking","style","position"],"sources":["C:/Diploma Project Indivisual/BeanSceneProject/BeanSceneMobileApp/MobileAppUI/App.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n// import { StyleSheet, Text, View } from 'react-native';\r\n\r\n// Import helpers and navigation\r\nimport RootNavigator from './navigation/RootNavigator';\r\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\r\nimport FlashMessage from 'react-native-flash-message';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n\r\n\r\n    <SafeAreaProvider>\r\n\r\n      <NavigationContainer linking={LinkingConfiguration}>\r\n        <RootNavigator />\r\n      </NavigationContainer>\r\n\r\n      <StatusBar style=\"auto\" />\r\n      {/* Global FlashMessage component to allow banners to appear */}\r\n      <FlashMessage position=\"top\"/>\r\n\r\n\r\n\r\n    </SafeAreaProvider>\r\n\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*import { NavigationContainer } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\n// import { StyleSheet, Text, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\n// Import helpers and navigation\r\nimport RootNavigator from './navigation/RootNavigator';\r\nimport LinkingConfiguration from './navigation/LinkingConfiguration';\r\nimport FlashMessage from 'react-native-flash-message';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport { AuthContext } from './utils/AuthContext';\r\n\r\n\r\nexport default function App() {\r\n  const [token, setToken] = useState(null)\r\n\r\n  React.useEffect(() => {\r\n    // Fetch the token from storage then navigate to our appropriate place\r\n    const bootstrapAsync = async () => {\r\n      let userToken;\r\n\r\n      try {\r\n        userToken = await getToken();\r\n      } catch (e) {\r\n        // Restoring token failed\r\n      }\r\n\r\n      // After restoring token, we may need to validate it in production apps\r\n\r\n      // This will switch to the App screen or Auth screen and this loading\r\n      // screen will be unmounted and thrown away.\r\n      setToken(userToken);\r\n    };\r\n\r\n    bootstrapAsync();\r\n  }, []);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={setToken}>\r\n    <SafeAreaProvider>\r\n      <NavigationContainer linking={LinkingConfiguration}>\r\n        {isAuthenticated ? ( \r\n          <RootNavigator />\r\n        ):(\r\n          <HomeScreen onLogin={() => {\r\n            setIsAuthenticated(true);\r\n            const navigation = useNavigation();\r\n            navigation.navigate('OrderScreen'); // Navigate to the OrderScreen\r\n          }} />\r\n        )}\r\n        \r\n\r\n\r\n      </NavigationContainer>\r\n      <StatusBar style=\"auto\" />\r\n      {/* Global FlashMessage component to allow banners to appear }\r\n      <FlashMessage position=\"top\"/>\r\n    </SafeAreaProvider>\r\n    </AuthContext.Provider>\r\n  );\r\n} */\r\n\r\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AAIjE,OAAOC,aAAa;AACpB,OAAOC,oBAAoB;AAC3B,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OAGED,KAAA,CAACP,gBAAgB;IAAAS,QAAA,GAEfJ,IAAA,CAACP,mBAAmB;MAACY,OAAO,EAAER,oBAAqB;MAAAO,QAAA,EACjDJ,IAAA,CAACJ,aAAa,IAAE;IAAC,CACE,CAAC,EAEtBI,IAAA,CAACN,SAAS;MAACY,KAAK,EAAC;IAAM,CAAE,CAAC,EAE1BN,IAAA,CAACF,YAAY;MAACS,QAAQ,EAAC;IAAK,CAAC,CAAC;EAAA,CAId,CAAC;AAIvB"},"metadata":{},"sourceType":"module","externalDependencies":[]}