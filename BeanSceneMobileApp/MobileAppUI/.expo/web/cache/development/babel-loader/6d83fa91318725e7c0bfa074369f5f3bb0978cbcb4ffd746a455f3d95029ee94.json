{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { TextParagraph, TextH1, TextH2, TextLabel } from \"../components/StyledText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen(props) {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLogoColour = _React$useState2[0],\n    setIsLogoColour = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    username = _React$useState4[0],\n    setUsername = _React$useState4[1];\n  var _React$useState5 = React.useState(\"\"),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    password = _React$useState6[0],\n    setPassword = _React$useState6[1];\n  function toggleLogo() {\n    setIsLogoColour(!isLogoColour);\n  }\n  function showHelp() {\n    props.navigation.replace('Root', {\n      screen: 'Help'\n    });\n  }\n  function showViewPeople() {\n    props.navigation.replace('Root', {\n      screen: 'Menu'\n    });\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsxs(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: [_jsx(View, {\n        style: Styles.homeLogoContainer,\n        children: _jsx(Pressable, {\n          onPress: toggleLogo,\n          children: _jsx(Image, {\n            source: isLogoColour ? require(\"../assets/images/roi-logo.jpg\") : require(\"../assets/images/roi-logo-monochrome.jpg\"),\n            style: Styles.homeLogo\n          })\n        })\n      }), _jsx(View, {\n        style: Styles.homeHeadingContainer,\n        children: _jsx(Text, {\n          style: Styles.homeHeading,\n          children: \" Login to Bean Scene Restaurant \"\n        })\n      }), _jsxs(View, {\n        style: Styles.formRow,\n        children: [_jsx(TextLabel, {\n          children: \"Username:\"\n        }), _jsx(TextInput, {\n          value: username,\n          onChangeText: setUsername,\n          style: Styles.textInput\n        })]\n      }), _jsxs(View, {\n        style: Styles.formRow,\n        children: [_jsx(TextLabel, {\n          children: \"Password:\"\n        }), _jsx(TextInput, {\n          value: password,\n          onChangeText: setPassword,\n          style: Styles.textInput\n        })]\n      }), _jsxs(View, {\n        style: Styles.homeButtonContainer,\n        children: [_jsx(MyButton, {\n          text: \"Login\",\n          type: \"major\",\n          size: \"large\",\n          onPress: showViewPeople,\n          buttonStyle: Styles.homeButton\n        }), _jsx(MyButton, {\n          text: \"Help\",\n          type: \"defualt\",\n          size: \"large\",\n          onPress: showHelp,\n          buttonStyle: Styles.homeButton\n        })]\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","Image","Text","View","ScrollView","Pressable","TextInput","SafeAreaView","Settings","Styles","MyButton","TextParagraph","TextH1","TextH2","TextLabel","jsx","_jsx","jsxs","_jsxs","HomeScreen","props","_React$useState","useState","_React$useState2","_slicedToArray","isLogoColour","setIsLogoColour","_React$useState3","_React$useState4","username","setUsername","_React$useState5","_React$useState6","password","setPassword","toggleLogo","showHelp","navigation","replace","screen","showViewPeople","style","safeAreaView","children","container","contentContainerStyle","contentContainer","homeLogoContainer","onPress","source","require","homeLogo","homeHeadingContainer","homeHeading","formRow","value","onChangeText","textInput","homeButtonContainer","text","type","size","buttonStyle","homeButton"],"sources":["C:/Diploma Project Indivisual/BeanSceneProject/BeanSceneMobileApp/MobileAppUI/screens/HomeScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Image, Text, View, ScrollView,Pressable, TextInput} from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n// Import helper code\r\nimport Settings from '../constants/Settings';\r\n// Import styling and components\r\nimport Styles from \"../styles/MainStyle\";\r\nimport { MyButton } from '../components/MyButton';\r\nimport { TextParagraph, TextH1, TextH2, TextLabel } from \"../components/StyledText\";\r\n\r\nexport default function HomeScreen(props) {\r\n  //State management\r\n  const[isLogoColour,setIsLogoColour]=React.useState(true);\r\n\r\n  const [username, setUsername] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n  function toggleLogo(){\r\n    setIsLogoColour(!isLogoColour)\r\n  }\r\n\r\n  function showHelp() {\r\n    props.navigation.replace('Root', {screen: 'Help'});\r\n  }\r\n\r\n\r\n\r\n  function showViewPeople() {\r\n    props.navigation.replace('Root', {screen: 'Menu'});\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={Styles.safeAreaView}>\r\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\r\n        {/* Logo */}\r\n        <View style={Styles.homeLogoContainer}>\r\n          <Pressable onPress={toggleLogo}>\r\n        <Image\r\n        //condotion\r\n         source={\r\n          isLogoColour\r\n          ?require(\"../assets/images/roi-logo.jpg\")\r\n        :require(\"../assets/images/roi-logo-monochrome.jpg\")\r\n        \r\n        }\r\n         style={Styles.homeLogo}\r\n         />\r\n         </Pressable>\r\n        </View>\r\n\r\n\r\n        {/* Heading */}\r\n        <View style={Styles.homeHeadingContainer}>\r\n          <Text style={Styles.homeHeading}> Login to Bean Scene Restaurant </Text>\r\n        </View>\r\n       \r\n        {/* <TextH1>This is the home screen</TextH1>\r\n\r\n        <TextParagraph>Here is some sample text for the home screen.</TextParagraph>\r\n\r\n        <TextParagraph>There is no place like 127.0.0.1</TextParagraph> */}\r\n         {/* Buttons */}\r\n\r\n         <View style={Styles.formRow}>\r\n              <TextLabel>Username:</TextLabel>\r\n              <TextInput value={username} onChangeText={setUsername} style={Styles.textInput}/>\r\n         </View>\r\n\r\n         <View style={Styles.formRow}>\r\n              <TextLabel>Password:</TextLabel>\r\n              <TextInput value={password} onChangeText={setPassword} style={Styles.textInput}/>\r\n          </View>\r\n\r\n        <View style={Styles.homeButtonContainer}>\r\n          <MyButton\r\n            text=\"Login\"\r\n            type=\"major\"      // default*|major|minor\r\n            size=\"large\"      // small|medium*|large\r\n            onPress={showViewPeople}\r\n            buttonStyle={Styles.homeButton}\r\n          />\r\n\r\n\r\n          <MyButton\r\n            text=\"Help\"\r\n            type=\"defualt\"      // default*|major|minor\r\n            size=\"large\"      // small|medium*|large\r\n            onPress={showHelp}\r\n            buttonStyle={Styles.homeButton}\r\n          />\r\n\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}